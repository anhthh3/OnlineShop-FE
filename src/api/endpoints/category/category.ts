/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Shoppe example
 * The shop API description
 * OpenAPI spec version: 1.0
 */
import type {
  CategoryControllerCreate201,
  CategoryControllerDelete200,
  CategoryControllerFindOne200,
  CategoryControllerGetAll200,
  CategoryControllerGetList200,
  CategoryControllerGetListParams,
  CategoryControllerUpdate200,
  CreateCategoryDto,
  UpdateCategoryDto,
} from '../../models';

import { api } from '../../../../lib/api';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getCategory = () => {
  const categoryControllerCreate = (
    createCategoryDto: CreateCategoryDto,
    options?: SecondParameter<typeof api>,
  ) => {
    return api<CategoryControllerCreate201>(
      {
        url: `http://localhost:3001/api/v1/category`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: createCategoryDto,
      },
      options,
    );
  };
  const categoryControllerGetList = (
    params?: CategoryControllerGetListParams,
    options?: SecondParameter<typeof api>,
  ) => {
    return api<CategoryControllerGetList200>(
      { url: `http://localhost:3001/api/v1/category`, method: 'GET', params },
      options,
    );
  };
  const categoryControllerGetAll = (options?: SecondParameter<typeof api>) => {
    return api<CategoryControllerGetAll200>(
      { url: `http://localhost:3001/api/v1/category/all`, method: 'GET' },
      options,
    );
  };
  const categoryControllerFindOne = (
    id: number,
    options?: SecondParameter<typeof api>,
  ) => {
    return api<CategoryControllerFindOne200>(
      { url: `http://localhost:3001/api/v1/category/${id}`, method: 'GET' },
      options,
    );
  };
  const categoryControllerUpdate = (
    id: number,
    updateCategoryDto: UpdateCategoryDto,
    options?: SecondParameter<typeof api>,
  ) => {
    return api<CategoryControllerUpdate200>(
      {
        url: `http://localhost:3001/api/v1/category/${id}`,
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        data: updateCategoryDto,
      },
      options,
    );
  };
  const categoryControllerDelete = (
    id: number,
    options?: SecondParameter<typeof api>,
  ) => {
    return api<CategoryControllerDelete200>(
      { url: `http://localhost:3001/api/v1/category/${id}`, method: 'DELETE' },
      options,
    );
  };
  return {
    categoryControllerCreate,
    categoryControllerGetList,
    categoryControllerGetAll,
    categoryControllerFindOne,
    categoryControllerUpdate,
    categoryControllerDelete,
  };
};
export type CategoryControllerCreateResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getCategory>['categoryControllerCreate']>
  >
>;
export type CategoryControllerGetListResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getCategory>['categoryControllerGetList']>
  >
>;
export type CategoryControllerGetAllResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getCategory>['categoryControllerGetAll']>
  >
>;
export type CategoryControllerFindOneResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getCategory>['categoryControllerFindOne']>
  >
>;
export type CategoryControllerUpdateResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getCategory>['categoryControllerUpdate']>
  >
>;
export type CategoryControllerDeleteResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getCategory>['categoryControllerDelete']>
  >
>;
