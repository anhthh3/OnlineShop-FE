/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Shoppe example
 * The shop API description
 * OpenAPI spec version: 1.0
 */
import type { CreateUserDTO, LoginUserDTO } from '../../models';

import { api } from '../../../../lib/api';

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getAuth = () => {
  const authControllerGet = (options?: SecondParameter<typeof api>) => {
    return api<void>(
      { url: `http://localhost:3001/api/v1/auth`, method: 'GET' },
      options,
    );
  };
  const authControllerRefreshAcessToken = (
    options?: SecondParameter<typeof api>,
  ) => {
    return api<void>(
      { url: `http://localhost:3001/api/v1/auth/refreshAT`, method: 'GET' },
      options,
    );
  };
  const authControllerCreate = (
    createUserDTO: CreateUserDTO,
    options?: SecondParameter<typeof api>,
  ) => {
    return api<void>(
      {
        url: `http://localhost:3001/api/v1/auth/signup`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: createUserDTO,
      },
      options,
    );
  };
  const authControllerLogin = (
    loginUserDTO: LoginUserDTO,
    options?: SecondParameter<typeof api>,
  ) => {
    return api<void>(
      {
        url: `http://localhost:3001/api/v1/auth/login`,
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        data: loginUserDTO,
      },
      options,
    );
  };
  const authControllerLogout = (options?: SecondParameter<typeof api>) => {
    return api<void>(
      { url: `http://localhost:3001/api/v1/auth/logout`, method: 'PATCH' },
      options,
    );
  };
  return {
    authControllerGet,
    authControllerRefreshAcessToken,
    authControllerCreate,
    authControllerLogin,
    authControllerLogout,
  };
};
export type AuthControllerGetResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>['authControllerGet']>>
>;
export type AuthControllerRefreshAcessTokenResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getAuth>['authControllerRefreshAcessToken']>
  >
>;
export type AuthControllerCreateResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>['authControllerCreate']>>
>;
export type AuthControllerLoginResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>['authControllerLogin']>>
>;
export type AuthControllerLogoutResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>['authControllerLogout']>>
>;
