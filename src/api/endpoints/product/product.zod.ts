/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Shoppe example
 * The shop API description
 * OpenAPI spec version: 1.0
 */
import { z as zod } from 'zod';

export const productControllerCreateProductBodyNameMax = 255;
export const productControllerCreateProductBodyDescriptionMax = 255;
export const productControllerCreateProductBodyStockMin = 0;
export const productControllerCreateProductBodyPriceMin = 0;
export const productControllerCreateProductBodyDiscountMin = 0;

export const productControllerCreateProductBodyDiscountMax = 100;

export const productControllerCreateProductBody = zod.object({
  name: zod
    .string()
    .min(1)
    .max(productControllerCreateProductBodyNameMax)
    .describe('Product name (e.g., CPU, GPU, RAM, etc.)'),
  description: zod
    .string()
    .min(1)
    .max(productControllerCreateProductBodyDescriptionMax)
    .describe('Short product description'),
  stock: zod
    .number()
    .min(productControllerCreateProductBodyStockMin)
    .describe('Stock quantity available'),
  price: zod
    .number()
    .min(productControllerCreateProductBodyPriceMin)
    .describe('Product price in USD'),
  discount: zod
    .number()
    .min(productControllerCreateProductBodyDiscountMin)
    .max(productControllerCreateProductBodyDiscountMax)
    .describe('Discount percentage (0-100)'),
  image: zod.string().describe('URL of product image'),
  categoryId: zod.number().describe('category id'),
});

export const productControllerCreateProductResponseResultNameMax = 255;
export const productControllerCreateProductResponseResultDescriptionMax = 255;
export const productControllerCreateProductResponseResultStockMin = 0;
export const productControllerCreateProductResponseResultPriceMin = 0;
export const productControllerCreateProductResponseResultDiscountMin = 0;

export const productControllerCreateProductResponseResultDiscountMax = 100;
export const productControllerCreateProductResponseResultRatingMin = 0;

export const productControllerCreateProductResponseResultRatingMax = 5;

export const productControllerCreateProductResponse = zod
  .object({
    code: zod.number(),
    message: zod.string(),
    result: zod.object({}),
  })
  .and(
    zod.object({
      result: zod
        .object({
          id: zod.number().describe('Product ID'),
          name: zod
            .string()
            .min(1)
            .max(productControllerCreateProductResponseResultNameMax)
            .describe('Product name (e.g., CPU, GPU, RAM, etc.)'),
          description: zod
            .string()
            .min(1)
            .max(productControllerCreateProductResponseResultDescriptionMax)
            .describe('Short product description'),
          stock: zod
            .number()
            .min(productControllerCreateProductResponseResultStockMin)
            .describe('Stock quantity available'),
          price: zod
            .number()
            .min(productControllerCreateProductResponseResultPriceMin)
            .describe('Product price in USD'),
          discount: zod
            .number()
            .min(productControllerCreateProductResponseResultDiscountMin)
            .max(productControllerCreateProductResponseResultDiscountMax)
            .describe('Discount percentage (0-100)'),
          rating: zod
            .number()
            .min(productControllerCreateProductResponseResultRatingMin)
            .max(productControllerCreateProductResponseResultRatingMax)
            .nullable()
            .describe('Average customer rating (0.0 - 5.0)'),
          image: zod.string().describe('URL of product image'),
          createdAt: zod.string().datetime({}).describe('Creation timestamp'),
          priceAfterDis: zod.number(),
          categoryName: zod.string(),
        })
        .optional(),
    }),
  );

export const productControllerSearchProductByNameQueryParams = zod.object({
  text: zod.string(),
});

export const productControllerSearchProductByNameResponseResultItemNameMax = 255;
export const productControllerSearchProductByNameResponseResultItemDescriptionMax = 255;
export const productControllerSearchProductByNameResponseResultItemStockMin = 0;
export const productControllerSearchProductByNameResponseResultItemPriceMin = 0;
export const productControllerSearchProductByNameResponseResultItemDiscountMin = 0;

export const productControllerSearchProductByNameResponseResultItemDiscountMax = 100;
export const productControllerSearchProductByNameResponseResultItemRatingMin = 0;

export const productControllerSearchProductByNameResponseResultItemRatingMax = 5;

export const productControllerSearchProductByNameResponse = zod
  .object({
    code: zod.number(),
    message: zod.string(),
    result: zod.object({}),
  })
  .and(
    zod.object({
      result: zod
        .array(
          zod.object({
            id: zod.number().describe('Product ID'),
            name: zod
              .string()
              .min(1)
              .max(
                productControllerSearchProductByNameResponseResultItemNameMax,
              )
              .describe('Product name (e.g., CPU, GPU, RAM, etc.)'),
            description: zod
              .string()
              .min(1)
              .max(
                productControllerSearchProductByNameResponseResultItemDescriptionMax,
              )
              .describe('Short product description'),
            stock: zod
              .number()
              .min(
                productControllerSearchProductByNameResponseResultItemStockMin,
              )
              .describe('Stock quantity available'),
            price: zod
              .number()
              .min(
                productControllerSearchProductByNameResponseResultItemPriceMin,
              )
              .describe('Product price in USD'),
            discount: zod
              .number()
              .min(
                productControllerSearchProductByNameResponseResultItemDiscountMin,
              )
              .max(
                productControllerSearchProductByNameResponseResultItemDiscountMax,
              )
              .describe('Discount percentage (0-100)'),
            rating: zod
              .number()
              .min(
                productControllerSearchProductByNameResponseResultItemRatingMin,
              )
              .max(
                productControllerSearchProductByNameResponseResultItemRatingMax,
              )
              .nullable()
              .describe('Average customer rating (0.0 - 5.0)'),
            image: zod.string().describe('URL of product image'),
            createdAt: zod.string().datetime({}).describe('Creation timestamp'),
            priceAfterDis: zod.number(),
            categoryName: zod.string(),
          }),
        )
        .optional(),
    }),
  );

export const productControllerGetProductPaginationQueryParams = zod.object({
  text: zod.string(),
  page: zod.number().optional(),
  orderField: zod.string().optional(),
  orderBy: zod.string().optional(),
});

export const productControllerGetProductPaginationResponseResultProductsItemNameMax = 255;
export const productControllerGetProductPaginationResponseResultProductsItemDescriptionMax = 255;
export const productControllerGetProductPaginationResponseResultProductsItemStockMin = 0;
export const productControllerGetProductPaginationResponseResultProductsItemPriceMin = 0;
export const productControllerGetProductPaginationResponseResultProductsItemDiscountMin = 0;

export const productControllerGetProductPaginationResponseResultProductsItemDiscountMax = 100;
export const productControllerGetProductPaginationResponseResultProductsItemRatingMin = 0;

export const productControllerGetProductPaginationResponseResultProductsItemRatingMax = 5;

export const productControllerGetProductPaginationResponse = zod
  .object({
    code: zod.number(),
    message: zod.string(),
    result: zod.object({}),
  })
  .and(
    zod.object({
      result: zod
        .object({
          products: zod.array(
            zod.object({
              id: zod.number().describe('Product ID'),
              name: zod
                .string()
                .min(1)
                .max(
                  productControllerGetProductPaginationResponseResultProductsItemNameMax,
                )
                .describe('Product name (e.g., CPU, GPU, RAM, etc.)'),
              description: zod
                .string()
                .min(1)
                .max(
                  productControllerGetProductPaginationResponseResultProductsItemDescriptionMax,
                )
                .describe('Short product description'),
              stock: zod
                .number()
                .min(
                  productControllerGetProductPaginationResponseResultProductsItemStockMin,
                )
                .describe('Stock quantity available'),
              price: zod
                .number()
                .min(
                  productControllerGetProductPaginationResponseResultProductsItemPriceMin,
                )
                .describe('Product price in USD'),
              discount: zod
                .number()
                .min(
                  productControllerGetProductPaginationResponseResultProductsItemDiscountMin,
                )
                .max(
                  productControllerGetProductPaginationResponseResultProductsItemDiscountMax,
                )
                .describe('Discount percentage (0-100)'),
              rating: zod
                .number()
                .min(
                  productControllerGetProductPaginationResponseResultProductsItemRatingMin,
                )
                .max(
                  productControllerGetProductPaginationResponseResultProductsItemRatingMax,
                )
                .nullable()
                .describe('Average customer rating (0.0 - 5.0)'),
              image: zod.string().describe('URL of product image'),
              createdAt: zod
                .string()
                .datetime({})
                .describe('Creation timestamp'),
              priceAfterDis: zod.number(),
              categoryName: zod.string(),
            }),
          ),
          pagination: zod.object({
            currentPage: zod.number(),
            pageSize: zod.number(),
            totalPages: zod.number(),
            totalItems: zod.number(),
          }),
        })
        .optional(),
    }),
  );

export const productControllerGetAllProductQueryParams = zod.object({
  page: zod.number().optional(),
  pageSize: zod.number().optional(),
  orderField: zod.string().optional(),
  orderBy: zod.string().optional(),
  categoryId: zod.number().optional(),
});

export const productControllerGetAllProductResponseResultProductsItemNameMax = 255;
export const productControllerGetAllProductResponseResultProductsItemDescriptionMax = 255;
export const productControllerGetAllProductResponseResultProductsItemStockMin = 0;
export const productControllerGetAllProductResponseResultProductsItemPriceMin = 0;
export const productControllerGetAllProductResponseResultProductsItemDiscountMin = 0;

export const productControllerGetAllProductResponseResultProductsItemDiscountMax = 100;
export const productControllerGetAllProductResponseResultProductsItemRatingMin = 0;

export const productControllerGetAllProductResponseResultProductsItemRatingMax = 5;

export const productControllerGetAllProductResponse = zod
  .object({
    code: zod.number(),
    message: zod.string(),
    result: zod.object({}),
  })
  .and(
    zod.object({
      result: zod
        .object({
          products: zod.array(
            zod.object({
              id: zod.number().describe('Product ID'),
              name: zod
                .string()
                .min(1)
                .max(
                  productControllerGetAllProductResponseResultProductsItemNameMax,
                )
                .describe('Product name (e.g., CPU, GPU, RAM, etc.)'),
              description: zod
                .string()
                .min(1)
                .max(
                  productControllerGetAllProductResponseResultProductsItemDescriptionMax,
                )
                .describe('Short product description'),
              stock: zod
                .number()
                .min(
                  productControllerGetAllProductResponseResultProductsItemStockMin,
                )
                .describe('Stock quantity available'),
              price: zod
                .number()
                .min(
                  productControllerGetAllProductResponseResultProductsItemPriceMin,
                )
                .describe('Product price in USD'),
              discount: zod
                .number()
                .min(
                  productControllerGetAllProductResponseResultProductsItemDiscountMin,
                )
                .max(
                  productControllerGetAllProductResponseResultProductsItemDiscountMax,
                )
                .describe('Discount percentage (0-100)'),
              rating: zod
                .number()
                .min(
                  productControllerGetAllProductResponseResultProductsItemRatingMin,
                )
                .max(
                  productControllerGetAllProductResponseResultProductsItemRatingMax,
                )
                .nullable()
                .describe('Average customer rating (0.0 - 5.0)'),
              image: zod.string().describe('URL of product image'),
              createdAt: zod
                .string()
                .datetime({})
                .describe('Creation timestamp'),
              priceAfterDis: zod.number(),
              categoryName: zod.string(),
            }),
          ),
          pagination: zod.object({
            currentPage: zod.number(),
            pageSize: zod.number(),
            totalPages: zod.number(),
            totalItems: zod.number(),
          }),
        })
        .optional(),
    }),
  );

export const productControllerUpdateProductDetailParams = zod.object({
  id: zod.number(),
});

export const productControllerUpdateProductDetailBodyNameMax = 255;
export const productControllerUpdateProductDetailBodyDescriptionMax = 255;
export const productControllerUpdateProductDetailBodyStockMin = 0;
export const productControllerUpdateProductDetailBodyPriceMin = 0;
export const productControllerUpdateProductDetailBodyDiscountMin = 0;

export const productControllerUpdateProductDetailBodyDiscountMax = 100;

export const productControllerUpdateProductDetailBody = zod.object({
  name: zod
    .string()
    .min(1)
    .max(productControllerUpdateProductDetailBodyNameMax)
    .describe('Product name (e.g., CPU, GPU, RAM, etc.)'),
  description: zod
    .string()
    .min(1)
    .max(productControllerUpdateProductDetailBodyDescriptionMax)
    .describe('Short product description'),
  stock: zod
    .number()
    .min(productControllerUpdateProductDetailBodyStockMin)
    .describe('Stock quantity available'),
  price: zod
    .number()
    .min(productControllerUpdateProductDetailBodyPriceMin)
    .describe('Product price in USD'),
  discount: zod
    .number()
    .min(productControllerUpdateProductDetailBodyDiscountMin)
    .max(productControllerUpdateProductDetailBodyDiscountMax)
    .describe('Discount percentage (0-100)'),
  image: zod.string().describe('URL of product image'),
  categoryId: zod.number().describe('category id'),
});

export const productControllerUpdateProductDetailResponseResultNameMax = 255;
export const productControllerUpdateProductDetailResponseResultDescriptionMax = 255;
export const productControllerUpdateProductDetailResponseResultStockMin = 0;
export const productControllerUpdateProductDetailResponseResultPriceMin = 0;
export const productControllerUpdateProductDetailResponseResultDiscountMin = 0;

export const productControllerUpdateProductDetailResponseResultDiscountMax = 100;
export const productControllerUpdateProductDetailResponseResultRatingMin = 0;

export const productControllerUpdateProductDetailResponseResultRatingMax = 5;

export const productControllerUpdateProductDetailResponse = zod
  .object({
    code: zod.number(),
    message: zod.string(),
    result: zod.object({}),
  })
  .and(
    zod.object({
      result: zod
        .object({
          id: zod.number().describe('Product ID'),
          name: zod
            .string()
            .min(1)
            .max(productControllerUpdateProductDetailResponseResultNameMax)
            .describe('Product name (e.g., CPU, GPU, RAM, etc.)'),
          description: zod
            .string()
            .min(1)
            .max(
              productControllerUpdateProductDetailResponseResultDescriptionMax,
            )
            .describe('Short product description'),
          stock: zod
            .number()
            .min(productControllerUpdateProductDetailResponseResultStockMin)
            .describe('Stock quantity available'),
          price: zod
            .number()
            .min(productControllerUpdateProductDetailResponseResultPriceMin)
            .describe('Product price in USD'),
          discount: zod
            .number()
            .min(productControllerUpdateProductDetailResponseResultDiscountMin)
            .max(productControllerUpdateProductDetailResponseResultDiscountMax)
            .describe('Discount percentage (0-100)'),
          rating: zod
            .number()
            .min(productControllerUpdateProductDetailResponseResultRatingMin)
            .max(productControllerUpdateProductDetailResponseResultRatingMax)
            .nullable()
            .describe('Average customer rating (0.0 - 5.0)'),
          image: zod.string().describe('URL of product image'),
          createdAt: zod.string().datetime({}).describe('Creation timestamp'),
          priceAfterDis: zod.number(),
          categoryName: zod.string(),
        })
        .optional(),
    }),
  );

export const productControllerRemoveProductParams = zod.object({
  id: zod.number(),
});

export const productControllerRemoveProductResponse = zod
  .object({
    code: zod.number(),
    message: zod.string(),
    result: zod.object({}),
  })
  .and(
    zod.object({
      result: zod.string().optional(),
    }),
  );

export const productControllerGetProductByIdParams = zod.object({
  id: zod.number(),
});

export const productControllerGetProductByIdResponseResultNameMax = 255;
export const productControllerGetProductByIdResponseResultDescriptionMax = 255;
export const productControllerGetProductByIdResponseResultStockMin = 0;
export const productControllerGetProductByIdResponseResultPriceMin = 0;
export const productControllerGetProductByIdResponseResultDiscountMin = 0;

export const productControllerGetProductByIdResponseResultDiscountMax = 100;
export const productControllerGetProductByIdResponseResultRatingMin = 0;

export const productControllerGetProductByIdResponseResultRatingMax = 5;

export const productControllerGetProductByIdResponse = zod
  .object({
    code: zod.number(),
    message: zod.string(),
    result: zod.object({}),
  })
  .and(
    zod.object({
      result: zod
        .object({
          id: zod.number().describe('Product ID'),
          name: zod
            .string()
            .min(1)
            .max(productControllerGetProductByIdResponseResultNameMax)
            .describe('Product name (e.g., CPU, GPU, RAM, etc.)'),
          description: zod
            .string()
            .min(1)
            .max(productControllerGetProductByIdResponseResultDescriptionMax)
            .describe('Short product description'),
          stock: zod
            .number()
            .min(productControllerGetProductByIdResponseResultStockMin)
            .describe('Stock quantity available'),
          price: zod
            .number()
            .min(productControllerGetProductByIdResponseResultPriceMin)
            .describe('Product price in USD'),
          discount: zod
            .number()
            .min(productControllerGetProductByIdResponseResultDiscountMin)
            .max(productControllerGetProductByIdResponseResultDiscountMax)
            .describe('Discount percentage (0-100)'),
          rating: zod
            .number()
            .min(productControllerGetProductByIdResponseResultRatingMin)
            .max(productControllerGetProductByIdResponseResultRatingMax)
            .nullable()
            .describe('Average customer rating (0.0 - 5.0)'),
          image: zod.string().describe('URL of product image'),
          createdAt: zod.string().datetime({}).describe('Creation timestamp'),
          priceAfterDis: zod.number(),
          categoryName: zod.string(),
        })
        .optional(),
    }),
  );
